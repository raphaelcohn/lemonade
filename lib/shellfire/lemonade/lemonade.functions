# This file is part of lemonade. It is subject to the licence terms in the COPYRIGHT file found in the top-level directory of this distribution and at https://raw.githubusercontent.com/raphaelcohn/lemonade/master/COPYRIGHT. No part of lemonade, including this file, may be copied, modified, propagated, or distributed except according to the terms contained in the COPYRIGHT file.
# Copyright Â© 2017 The developers of lemonade. See the COPYRIGHT file in the top-level directory of this distribution and at https://raw.githubusercontent.com/raphaelcohn/lemonade/master/COPYRIGHT.


# Alpine Linux lacks brotli, pngquant (edge/community) and jpegoptim (edge/community)


core_usesIn lemonade binary bundle caddy configuration css download_caddy favicon image_crush minify paths spellcheck validate_input validate_output

lemonade_all()
{
	_lemonade_fileExtensions='css html js json svg xml txt csv tsv'
	
	lemonade_paths_makeInputPathAbsolute
	
	core_message NOTICE "Creating output folder structure"
	lemonade_paths_createOutputFolder
	
	lemonade_binary_addStandaloneBinaryPackageToPath jq hugo minify svgcleaner
	
	core_message NOTICE "Adding npm binaries to the PATH"
	lemonade_binary_installAndAddNpmBinariesToThePath autoprefixer-cli@1.0.0 html-minifier@3.5.3
	
	if core_variable_isTrue "$lemonade_development"; then
		core_message WARN "Skipping input validation checks"
	else
		lemonade_validate_input
	fi
	
	core_message NOTICE "Copying caddy outline"
	lemonade_caddy_copyOutline

	core_message NOTICE "Configuring"
	lemonade_configuration
	lemonade_css_compileSassToCssAndAutoprefix "$lemonade_inputPath"/sass/root "$_lemonade_rootOutputPath"

	core_message NOTICE "Ensuring caddy is downloaded"
	lemonade_download_caddy_ensureCaddyIsDownloadedCachedAndCopied

	core_message NOTICE "Generating Favicon"
	lemonade_favicon_getRealFavicon

	core_message NOTICE "Running Hugo"
	lemonade_runHugo

	core_message NOTICE "Installing additional caddy HTTP headers"
	lemonade_caddy_combineHeaders
	
	if core_variable_isTrue "$lemonade_development"; then
		core_message WARN "Skipping image crush"
	else
		core_message NOTICE "Crushing images"
		lemonade_image_crush
	fi
	
	if core_variable_isTrue "$lemonade_development"; then
		core_message WARN "Skipping minification"
	else
		# Suspended as does not play nicely with amp
		#lemonade_tidy_html
		core_message NOTICE "Minifying"
		lemonade_minify_html
		lemonade_minify
	fi
	
	lemonade_removeSourceControlRelics
	
	if core_variable_isTrue "$lemonade_development"; then
		core_message WARN "Skipping output validation checks"
	else
		core_message NOTICE "Validating Output"
		lemonade_validate_output
	fi
	
	if core_variable_isTrue "$lemonade_development"; then
		core_message WARN "Skipping spellchecking"
	else
		core_message NOTICE "Validating Spellchecking"
		lemonade_spellcheck
	fi
	
	if core_variable_isTrue "$lemonade_development"; then
		core_message WARN "Skipping compression"
	else
		core_message NOTICE "Compressing"
		lemonade_compress
	fi

	core_message NOTICE "Locking down file permissions"
	lemonade_lockDownFilePermissions
	
	if core_variable_isTrue "$lemonade_development"; then
		core_message WARN "Skipping creating site.tar.gz"
	else
		core_message NOTICE "Creating site.tar.gz"
		lemonade_bundle
	fi
}

core_dependency_requires '*' mkdir
core_dependency_requires '*' mv
core_dependency_requires '*' find
lemonade_runHugo()
{
	local hugoInputFolderPath="$lemonade_inputPath"/hugo
	
	hugo --quiet \
		--destination "$_lemonade_rootOutputPath" --source "$hugoInputFolderPath" \
		--i18n-warnings
	
	local errors="$_lemonade_siteOutputFolderPath"/errors
	mkdir -m 0700 -p "$errors"
	
	if [ -f "$_lemonade_rootOutputPath"/404.html ]; then
		rm -rf "$errors"/404.html
		mv "$_lemonade_rootOutputPath"/404.html "$errors"
	fi
	
	# Some hugo themes incorrectly using `.gitkeep`
	find -d "$lemonade_outputPath"/site -type f -name '.gitkeep' -exec rm -rf {} \;
}

core_dependency_requires '*' find
core_dependency_requires '*' tidy
lemonade_tidy_html()
{
	local folderPath
	for folderPath in "$_lemonade_siteOutputFolderPath"/root "$_lemonade_siteOutputFolderPath"/errors
	do
		local filePath
		find "$folderPath" -type f -name '*.html' | while IFS= read -r filePath
		do
			tidy -modify -clean -quiet -raw -utf8 -lang en "$filePath"
		done
	done
}

core_dependency_requires '*' find
core_dependency_requires '*' pigz
core_dependency_requires '*' touch
core_dependency_requires '*' bro
lemonade_compress()
{
	local folderPath
	for folderPath in "$_lemonade_siteOutputFolderPath"/root "$_lemonade_siteOutputFolderPath"/errors
	do
		# woff (not woff2) can be very slightly compressed by pigz
		local fileExtension
		for fileExtension in css html js json svg xml txt csv tsv \
			ico eot ttf
		do
			local filePath
			find "$folderPath" -type f -name '*.'"$fileExtension" | while IFS= read -r filePath
			do
				# More efficient gzip
				pigz -11 --iterations 50 --no-name --oneblock --quiet --no-time --keep --force "$filePath"
				touch -r "$filePath" "$filePath".gz
			
				# brotli (`bro`)
				bro --force --quality 11 --repeat 50 --window 24 --input "$filePath" --output "$filePath".br
				touch -r "$filePath" "$filePath".br
			done
		done
	done
}

lemonade_removeSourceControlRelics()
{
	find -d "$_lemonade_siteOutputFolderPath"/root -name '.git*' -exec rm -rf {} \;
	find -d "$_lemonade_siteOutputFolderPath"/root -name '.cvs*' -exec rm -rf {} \;
	find -d "$_lemonade_siteOutputFolderPath"/root -name '.hg*' -exec rm -rf {} \;
}

core_dependency_requires '*' find
core_dependency_requires '*' chmod
lemonade_lockDownFilePermissions()
{
	mkdir -m 0700 -p "$lemonade_outputPath"/site/cache
	mkdir -m 0700 -p "$lemonade_outputPath"/site/log
	
	find -d "$lemonade_outputPath"/site -type f -exec chmod 0400 {} \;
	find -d "$lemonade_outputPath"/site -type d -exec chmod 0500 {} \;
	
	find -d "$lemonade_outputPath"/site/bin -type f -exec chmod 0500 {} \;
	chmod 0500 "$lemonade_outputPath"/site/caddy-wrapper
	chmod 0700 "$lemonade_outputPath"/site/cache
	chmod 0700 "$lemonade_outputPath"/site/log
}
