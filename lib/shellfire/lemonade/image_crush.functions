# This file is part of lemonade. It is subject to the licence terms in the COPYRIGHT file found in the top-level directory of this distribution and at https://raw.githubusercontent.com/raphaelcohn/lemonade/master/COPYRIGHT. No part of lemonade, including this file, may be copied, modified, propagated, or distributed except according to the terms contained in the COPYRIGHT file.
# Copyright Â© 2014-2015 The developers of lemonade. See the COPYRIGHT file in the top-level directory of this distribution and at https://raw.githubusercontent.com/raphaelcohn/lemonade/master/COPYRIGHT.


core_dependency_requires '*' find
core_dependency_requires '*' rm
core_dependency_requires '*' pngquant
core_dependency_requires '*' optipng
lemonade_image_crush_allPng()
{
	pushd "$_lemonade_rootOutputPath"
		
		local imageFilePath
		find . -type f -name '*.png' | while IFS= read -r imageFilePath
		do
			local optimisationSettingsFilePath="$imageFilePath".lossy
			if [ -f "$optimisationSettingsFilePath" ]; then
				
				local _minimum=0
				local _maximum=100
				
				minimum()
				{
					_minimum="$1"
				}
				
				maximum()
				{
					_maximum="$1"
				}
				
				. "$optimisationSettingsFilePath"
				
				pngquant --quality "$_minimum"-"$_maximum" --skip-if-larger --speed 1 --strip --force --ext .png "$imageFilePath"
				
				rm -rf "$optimisationSettingsFilePath"
			fi
			
			optipng -o 7 -clobber -fix -preserve -quiet -zw 32k -strip all "$imageFilePath"
		done
		
	popd
}

core_dependency_requires '*' find
core_dependency_requires '*' jpegoptim
lemonade_image_crush_allJpeg()
{
	pushd "$_lemonade_rootOutputPath"
		
		local imageFilePath
		find . -type f -name '*.jpg' | while IFS= read -r imageFilePath
		do
			set -- --force --preserve --preserve-perms --quiet --strip-all --all-normal
			
			local optimisationSettingsFilePath="$imageFilePath".lossy
			if [ -f "$optimisationSettingsFilePath" ]; then
				
				local _maximum=100
				
				minimum()
				{
					:
				}
				
				maximum()
				{
					_maximum="$1"
				}
				
				. "$optimisationSettingsFilePath"
				
				set -- "$@" --max="$_maximum"
								
				rm -rf "$optimisationSettingsFilePath"
			fi
			
			jpegoptim "$@" "$imageFilePath"
		done
		
	popd
}

# NOTE: lossygif (https://pornel.net/lossygif) allows lossy compression but conflicts with gifsicle as it has the SAME binary name... FFS...
core_dependency_requires '*' find
core_dependency_requires '*' mv
core_dependency_requires '*' gifsicle
core_dependency_requires '*' rm
lemonade_image_crush_allGif()
{
	pushd "$_lemonade_rootOutputPath"
		
		local imageFilePath
		find . -type f -name '*.jpg' | while IFS= read -r imageFilePath
		do
			mv "$imageFilePath" "$imageFilePath".orig
			gifsicle --optimize=3 "$imageFilePath".orig --output "$imageFilePath"
			rm "$imageFilePath".orig
		done
		
	popd
}
