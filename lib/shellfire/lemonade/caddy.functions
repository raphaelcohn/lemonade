# This file is part of lemonade. It is subject to the licence terms in the COPYRIGHT file found in the top-level directory of this distribution and at https://raw.githubusercontent.com/raphaelcohn/lemonade/master/COPYRIGHT. No part of lemonade, including this file, may be copied, modified, propagated, or distributed except according to the terms contained in the COPYRIGHT file.
# Copyright Â© 2017 The developers of lemonade. See the COPYRIGHT file in the top-level directory of this distribution and at https://raw.githubusercontent.com/raphaelcohn/lemonade/master/COPYRIGHT.


core_dependency_requires '*' rsync
core_dependency_requires '*' cp
core_dependency_requires '*' mkdir
lemonade_caddy_copyOutline()
{
	mkdir -m 0700 -p "$_lemonade_siteOutputFolderPath"
	
	rsync --archive --quiet --exclude='.git' --exclude='.gitignore' --exclude='.gitmodules' "$lemonade_inputPath"/caddy/ "$_lemonade_siteOutputFolderPath"/
	
	local folderNameToEnsureExists
	for folderNameToEnsureExists in environments/production/caddyfiles errors markdown-templates root
	do
		mkdir -m 0700 -p "$_lemonade_siteOutputFolderPath"/"$folderNameToEnsureExists"
	done
}

core_dependency_requires '*' rm
lemonade_caddy_combineHeaders()
{
	_lemonade_caddy_combineHeaders()
	{
		local parentFolderRelativePath="$1"
		
		local folderPath
		if [ -z "$parentFolderRelativePath" ]; then
			folderPath=''
		else
			folderPath="$parentFolderRelativePath"/
		fi
		
		local headersFile
		set +f
		for headersFile in "${folderPath}"*.headers
		do
			set -f
			
			if [ ! -e "$headersFile" ]; then
				continue
			fi
			
			if [ ! -f "$headersFile" ]; then
				continue
			fi
			
			local fileName="${headersFile##*/}"
			local fileNameWithoutHeadersExtension="${fileName%.headers}"
			
			local urlFilePath="$parentFolderRelativePath"/"$fileNameWithoutHeadersExtension"
			if [ ! -e "$urlFilePath" ]; then
				core_message WARN "There is a headers file, but no resource '$urlFilePath'"
			fi
			local url
			case "$fileNameWithoutHeadersExtension" in
				
				index.md|index.html|index.tpl)
					if [ -z "$parentFolderRelativePath" ]; then
						url=/
					else
						url=/"$parentFolderRelativePath"/
					fi
				;;
				
				*)
					url=/"$urlFilePath"
				;;
				
			esac
			
			printf '%s {\n' "$url"
			local headerLine
			while IFS= read -r headerLine
			do
				printf '\t%s\n' "$headerLine"
			done <"$headersFile"
			printf '}\n\n'
			
			rm -rf "$headersFile"
			
		done
		set -f

		local folder
		set +f
		for folder in "${folderPath}"*
		do
			set -f
			
			if [ ! -e "$folder" ]; then
				continue
			fi
			
			if [ -d "$folder" ]; then
				_lemonade_caddy_combineHeaders "$folder"
			fi
		done
		set -f
	}
	
	pushd "$_lemonade_siteOutputFolderPath"/root
	
		_lemonade_caddy_combineHeaders '' >"$_lemonade_siteOutputFolderPath"/headers.Caddyfile
		
	popd
}
