#!/usr/bin/env sh
# This file is part of lemonade. It is subject to the licence terms in the COPYRIGHT file found in the top-level directory of this distribution and at https://raw.githubusercontent.com/raphaelcohn/lemonade/master/COPYRIGHT. No part of lemonade, including this file, may be copied, modified, propagated, or distributed except according to the terms contained in the COPYRIGHT file.
# Copyright Â© 2017 The developers of lemonade. See the COPYRIGHT file in the top-level directory of this distribution and at https://raw.githubusercontent.com/raphaelcohn/lemonade/master/COPYRIGHT.


_program()
{
	core_usesIn core temporaryFiles variable/array
	core_usesIn lemonade
	
	lemonade()
	{
		lemonade_all
	}
}

_program_name='lemonade'
_program_version='unversioned'
_program_package_or_build=''
_program_path="$([ "${_program_fattening_program_path+set}" = 'set' ] && printf '%s\n' "$_program_fattening_program_path" || ([ "${0%/*}" = "${0}" ] && printf '%s\n' '.' || printf '%s\n' "${0%/*}"))"
_program_libPath="${_program_path}/lib"
_program_etcPath="${_program_path}/etc"
_program_varPath="${_program_path}/var"
_program_binPath="${_program_path}/bin"
_program_entrypoint='lemonade'

_program_commandLine_parseInitialise()
{
	:
}

_program_commandLine_helpMessage()
{
	_program_commandLine_helpMessage_usage="[OPTION]..."
	_program_commandLine_helpMessage_description="Builds a website using hugo and caddy."
	_program_commandLine_helpMessage_options="
  -i, --input-path PATH     Path to input data
                            Defaults to current working directory:-
                            $(pwd)/input
  -o, --output-path PATH    Path to use when creating output.
                            Created if it doesn't exist.
                            Defaults to current working directory:-
                            $(pwd)/output
  -c, --clean-output [OFF]  Clean output on start. Defaults to ON"
    _program_commandLine_helpMessage_optionsSpacing='     '
	_program_commandLine_helpMessage_configurationKeys="
  lemonade_inputPath       Equivalent to --input-path
  lemonade_outputPath      Equivalent to --output-path
  lemonade_cleanOutput     Equivalent to --clean-output
"
	_program_commandLine_helpMessage_examples="
  ${_program_name} -s /some/path
"
}

_program_commandLine_optionExists()
{
	case "$optionName" in
		
		s|input-path)
			echo 'yes-argumented'
		;;
		
		o|output-path)
			echo 'yes-argumented'
		;;
		
		c|clean-output)
			echo 'yes-optionally-argumented'
		;;
		
	esac
}

_program_commandLine_processOptionWithArgument()
{
	case "$optionName" in
		
		s|input-path)
			core_validate_folderPathReadableAndSearchable $core_commandLine_exitCode_USAGE 'option' "$optionNameIncludingHyphens" "$optionValue"
			lemonade_inputPath="$optionValue"
		;;
		
		o|output-path)
			core_validate_folderPathIsReadableAndSearchableAndWritableOrCanBeCreated $core_commandLine_exitCode_USAGE 'option' "$optionNameIncludingHyphens" "$optionValue"
			lemonade_outputPath="$optionValue"
		;;
		
		c|clean-output)
			core_validate_isBoolean $core_commandLine_exitCode_USAGE 'option' "$optionNameIncludingHyphens" "$optionValue"
			lemonade_cleanOutput="$optionValue"
		;;
		
	esac
}

_program_commandLine_processOptionWithoutArgument()
{
	case "$optionName" in
		
		c|clean-output)
			lemonade_cleanOutput=on
		;;
		
	esac
}

_program_commandLine_handleNonOptions()
{
	if [ $# -ne 0 ]; then
		core_validate_exit "Do not supply non-options"
	fi
}

_program_commandLine_validate()
{
	if core_variable_isSet lemonade_inputPath; then
		core_validate_folderPathReadableAndSearchable $core_commandLine_exitCode_CONFIG 'configuration setting' 'lemonade_inputPath' "$lemonade_swaddlingPath"
	else
		core_message INFO "Defaulting --input-path to current working directory"
		lemonade_inputPath="$(pwd)"/input
	fi
	
	if core_variable_isSet lemonade_outputPath; then
		core_validate_folderPathIsReadableAndSearchableAndWritableOrCanBeCreated $core_commandLine_exitCode_CONFIG 'configuration setting' 'lemonade_outputPath' "$lemonade_outputPath"
	else
		core_message INFO "Defaulting --output-path to current working directory"
		lemonade_outputPath="$(pwd)"/output
	fi
	
	if core_variable_isSet lemonade_cleanOutput; then
		core_validate_isBoolean $core_commandLine_exitCode_CONFIG 'configuration setting' 'lemonade_cleanOutput' "$lemonade_cleanOutput"
	else
		lemonade_cleanOutput=on
	fi
}

# Assumes pwd, and so requires this code to be running from this folder
. "$_program_libPath"/shellfire/core/init.functions "$@"
